ls
clear
exit
nu
ls
exit
ls
clear
ls
exit
cd
ls
clear
ls
clear
git clone git@github.com:Yakumo-zi/dotfiles.git
echo $nu.env-path
echo $nu.config-path
vim
ls
bob
sudo pacman -S bob
bob use stable
nvim
exit
cd
bob use stable
bob uinstall stable
bob uninstall stable
bob --help
bob erase 
bob use stable
ls
cd dotfiles/
ls
clear
ls
cp -rf nvim ~/.config/
ls
nvim
cd ..
ls
echo $path
ls
cd ..
ls
cd
cd .config/
ls
cd nushell/
ls
clear
ls
vim env.nu
ls ~/.local/share/bob/nvim-bin/
$env.PATH = ($env.PATH | split row (char esep) | append "~/.local/share/bob/nvim-bin/")
$env
$env.PATH
nvim
pacman -S make
sudo pacman -S makefile
sudo pacman -S make
ls
vim /etc/pacman.d/mirrorlist
sudo vim /etc/pacman.d/mirrorlist
ls
clear
sudo pacman -Syyu
sudo pacman -Sy
ping www.google.com
ping 8.8.8.8
ls
clear
sudo pacman-mirrors -f5 && sudo pacman -Syyu
sudo pacman-mirrors
sudo pacman-mirrors -f5
sudo pacman -Syyu
ls
vim /etc/pacman.d/mirrorlist
sudo vim /etc/pacman.d/mirrorlist
ls
clear
sudo pacman -Syyu
clear
sudo pacman -Syyu
sudo pacman -S cmake
sudo pacman -S clang gcc
ls
nvim
sudo pacman -S unzip
clear
nvim
ls
cd
ls
clear
ls
mkdir code
ls
cd code/
ls
clear
git clone git@github.com:Yakumo-zi/code-recipes.git
ls
clear
ls
cd code-recipes/
ls
clear
ls
sudo pacman -S nvm
sudo pacman -S fnm
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustc --version
ls ~/.cargo/env
vim ~/.cargo/env
ls ~/.cargo/bin
$env.PATH = ($env.PATH | split row (char esep) | append "/home/devil/.cargo/bin")
cargo --version
ls
clear
rustc --version
ls
clear
cd
ls
clear
ls
cd code/
ls
clear
sl
clear
cd code-recipes/
ls
clea
clear
ls
clear
ls
curl -fsSL https://fnm.vercel.app/install | bash
nvim $nu.config-path
nvim 
ls
nvim $nu.config-path
nvim
ls
clear
ls
nvim $nu.config-path
ls ~/.cargo/bin
nvim $nu.config-path
fnm
cargo install fnm
fnm
fnm list
fnm env
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" && name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" ; name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })
fnm env --shell bash
cd
sudo pacman -S yyu
sudo pacman -Syyu
clear
ls
clear
gcc --version
rustc --version
g++ --version
clang++ --version
ls
clear
fnm
fnm env
fnm env --shell bash
fnm env | str  find-replace -a "export " '' | str find-replace -a '"' '' |  lines | split column = | rename name value | last 5
ls
clear
fnm env --json
fnm env --json | from json
fnm env --json | from json | load-env
let-env PATH = ($env.PATH | split row (char esep) | prepend ([$env.FNM_MULTISHELL_PATH "bin"] | path join))
$env
nu --versaion
nu --version
ls
clear
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" and name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })
$env.Path = ($env.Path | append [<\n>  $env.FNM_MULTISHELL_PATH<\n>])
$env.PATH
$env.Path
$env.PATH = ($env.PATH | append [<\n>  $env.FNM_MULTISHELL_PATH<\n>])
ls
cd .config/nushell/
ls
vim fnm.nu
nvim fnm.nu
nvim config.nu
fnm 
fnm list
fnm install 
fnm -help
fnm list-remote
fnm install 20.12.2
fnm list
node --version
source ~/.config/nushell/config.nu
nvim ~/.config/nushell/fnm.nu
source ~/.config/nushell/config.nu
nvim ~/.config/nushell/fnm.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/fnm.nu
fnm list
node --version
node -v
fnm --help
fnm env
fnm env json
fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" and name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value }
ls /home/devil/.local/share/fnm/fnm
fnm env bash
fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" and name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value }
fnm env --shell bash
fnm use
fnm env
fnm env --shell bash
fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" and name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value }
fnm list
fnm use v20.12.2
node --version
exit
cd
fnm list
node -v
node --version
fnm list
fnm env -bash
fnm env --shell bash
cd .config/nushell/
ls
vim fnm.nu
nvim fnm.nu
ls
clear
exit
cd
fnm
fnm list
fnm use
fnm current
fnm exec 
fnm exec node --version
fnm exec --using=20 node --version
clear
ls
cargo uinstall fnm
cargo --help
cargo uninstall fnm
ls
clear
fnm
ls
clear
cd .config/nushell/
ls
clera
ls
clear
ls
nvim fnm
nvim fnm.nu
ls
clear
sudo pacman -S zoxide
z
zoxide
zoxide init
zoxide init nushell
zoxide init nushell | save -f ~/.config/nushell/zoxide.nu
nvim ~/.config/nushell/config.nu
source $env.config
$env.config
nvim $nu.config-path
source $nu.config-path
ls
clear
z
ls
clear
z
clear
let remote = "https://raw.githubusercontent.com/nushell/tree-sitter-nu/main/queries/nu/"<\n>let local = (<\n>    $env.XDG_DATA_HOME?<\n>    | default ($env.HOME | path join ".local" "share")<\n>    | path join "nvim" "lazy" "nvim-treesitter" "queries" "nu"<\n>)<\n><\n>let file = "highlights.scm"<\n><\n>mkdir $local<\n>http get ([$remote $file] | str join "/") | save --force ($local | path join $file)
clear
nvim $nu.config-path
z nvim
z .config/nvim
ls
nvim init.lua
$env.home
$env.HOME
ls
clear
sudo pacman -S zellij
ls
clear
ls
clear
cd
ls
clear
ls
z nvim
ls
clear
ls
vim init.lua
nvim init.lua
zellij --help
zellij -c
zellij run ls
zellij run
zellij conver-theme
zellij convert-theme
clear
zellij --help
zellij
z config
z ~/.config/
ls
clear
ls
z 
ls
z dotfiles/
ls
clear
ls
cd clangd/
ls
vim config.yaml
ls
clear
ls
cd ..
ls
rm -rf clangd/
rm -rf hypr/
rm -rf hyprv3
ls
clear
ls
rm -rf waybar/
ls
clear
ls
rm -rf nvim/
cp ~/.config/nvim/ .
cp ~/.config/nvim .
cp -rf ~/.config/nvim .
cp -rf ~/.config/nushell/ .
ls
clear
ls
git add .
git commit -m "update dotfiles<\n>"
git config --global user.email "1477717283@qq.com"
git config --global user.name "Yakumo-zi"
git commit -m "update dotfiles"
git push origin main
z nushel
z config
z nushell/
ls
clear
ls
vim env.nu
nvim env.nu
ls
clear
ls
nvim config.nu
ls ~/.cargo/bin
ls
clear
ls
souce $nu.config-path
source $nu.config-path
ls
clear
nvim
ls
clear
ls
clear
echo $env.PATH
exit
z
echo $env.PATH
cargo install fnm
fnm --json
fnm env --json
fnm env --json | from json
fnm env --json | from json | count
fnm env --json | from json | lines
fnm env --json | from json
fnm env --bash | lines
fnm env --shell bash | lines
fnm env --json | from json | load-env
$env
$env | grep "FNM"
fnm --version
fnm use lts
fnm env --shell bash | lines
$env.FNM_MULTISHELL_PATH
$env.PATH = ($env.PATH | append [<\n>  $env.FNM_MULTISHELL_PATH<\n>])
$env.PATH
fnm
fnm --version
ls
clear
fnm install lts
fnm use lts
fnm env --use-on-cd
fnm env --json --use-on-cd
fnm env --json --use-on-cd | from json
fnm env --shell bash --use-on-cd 
fnm use lts
ls
clear
cd
sudo pacman -Syyu
ls
clear
ping 8.8.8.8
ls
clear
cat /etc/resolv.conf | grep nameserver
cat /etc/resolv.conf | grep nameserver | str trim -l "nameserver"
cat /etc/resolv.conf | grep nameserver | str trim -l "nameserver" “ ”
str replace .bash_history dotfiles/
ls
str replace --help
cat /etc/resolv.conf | grep nameserver | str replace --all 'nameserver' ''
cat /etc/resolv.conf | grep nameserver | str replace --all 'nameserver' '' | str trim
nvim proxy.nu
ls
clear
ls
clear
ls
clear
ls
nu proxy.nu
hostip
nu proxy.nu
ls
clear
hostname -I
hostname
url
url join
ls
clear
ip
ifconfig
config
ipconfig
ip
ip -l
ip address
nu proxy.nu
ip address | lines
ip address | lines | grep inet
ip address | lines | grep "inet"
ip address | lines | grep 2
ip address | lines | grep 2:
clear
wsl hostname -I
exit
ip address | lines | grep 2:
ip address | grep inet
nvim proxy.nu
nu proxy.nu
ls
clear
ls
clear
ls
ip addr show eth0
ip addr
ip addr show eth0
ip addr --help
ip --help
clear
ls
clear
z nvim
ls
clear
ls
vim init.lua
ls
ip addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
nvim $nu.config-path
ls
nvim init.lua
ls
clear
ls
vim proxy.nu
nu proxy.nu
ls
clear
nvim proxy.nu
nu proxy.nu
ls
vim proxy.nu
nvim proxy.nu
vim proxy.nu
nu proxy.nu
ls
clear
ls
nvim proxy.nu
nu proxy.nu
ls
vim proxy.nu
nvim proxy.nu
nu proxy.nu
ping 8.8.8.8
ping google
ping www.google.com
ls
clear
ls
vim proxy.nu
nvim proxy.nu
bash export http_proxy=""
bash "export http_proxy=''"
$env | grep "http"
$env | grep "HTTP"
nvim proxy.nu
source ./proxy.nu
$env | grep "HTTP"
ping www.google.com
ls
clear
ls
$env | grep "http"
nvim proxy.nu
git --help
git config --help
ls -asl
clear
ls
cp proxy.nu ~/.config/nushell/
ls
clear
ls
rm proxy.nu
ls
clear
z nushell
ls
clear
ls
rm fnm.nu
ls
clear
ls
vim proxy.nu
ls
clear
z
ls
clear
ls
$env | grep "http"
nvim proxy.nu
zellij
ls
clear
exit
z
ls
clear
$env | grep "http"
ls
clear
ping www.google.com
http get www.google.com
http get https://www.google.com
$env.HTTP_PROXY = http://127.0.0.1:7890 | http get https://lumtest.com/myip.json | get country
ls
clear
sudo pacman -Syyu
ls
clear
ls
cd dotfiles/
ls
clear
ls
rm -rf nushell/
cp ~/.config/nushell .
cp -rf nushell ~/.config/
ls ~/.config/nushell/
ls
clear
ls
git push origin main
nvim
ls
clear
nvim
ls
clear
ls
clear
z notes
ls
z code
z 
z code
z code-recipes/frontend/notes/
ls
clear
ls
vim app/layout.tsx
nvim app/layout.tsx
node --version
ls
clear
ls
nvi 
nvim
ls
nvim app/layout.tsx
cd ..
ls
cd ..
ls
clear
ls
cd cpp/
ls
cd test/
ls
nvim main.cpp
ls
clear
ls
cd ..
ls
cd modern_cpp/
l
ls
clear
ls
cd chapter_1/
ls
clear
ls
vim CMakeLists.txt
nvim CMakeLists.txt
ls
clear
vim main.cc
nvim main.cc
ls
clear
z
ls
nvim
ls
clear
ls
clear
?
ls
clear
history 
clear
history --help
history session
history | where command =~ cargo | get command
history
history | where command =~ cargo | get command
clear
zellij setup --dump-config > ~/.config/zellij/config.kdl
zellij setup --dump-config | ~/.config/zellij/config.kdl
save --help
zellij setup --dump-config | save ~/.config/zellij/config.kdl
mkdir ~/.config/zellij
zellij setup --dump-config | save ~/.config/zellij/config.kdl
vim ~/.config/zellij/config.kdl
ls
clear
sudo pacman -S gvm
ls
clear
ls
cd dotfiles/
ls
mkdir softwares.md
ls
rm -rf softwares.md/
mkdir record
ls
cd record/
nvim Softwares.md
sudo pacman -S yazi
yazi
ls
clear
ls
clear
z
ls
z config
ls
clear
ls
cd yazi/
ls
cd flavors/
ls
cd ..
ls
cd plugins/
ls
cd ..
ls
clear
ls
vim yazi.toml
nvim yazi.toml
ls
clear
yazi
exit
exit
zellij
ls
clear
exit
z
zelli
zellij
nvim ~/.config/zellij/config.kdl
ls
clear
nvim
ls
clear
ls
cd dotfiles/
cp -rf ~/.config/yazi
cp -rf ~/.config/yazi .
cp -rf ~/.config/zellij .
ls
rm -rf ~/.config/yazi/
rm -rf ~/.config/zellij/
ln -s /home/devil/dotfiles/yazi /home/devil/.config/
ln -s /home/devil/dotfiles/zellij /home/devil/.config/
ls ~/.config/
zellij
:q
clear
yazi
ls
clear
sudo pacman -S fzf
ls
clear
ls
cd dotfiles/
ls
cd record/
ls
vim Softwares.md
ls
clear
ls
nvim $nu.config-path
ls
clear
cd ..
ls
git add .
git commit -m "tidy config"
git push origin main
sudo pacman -S curl git
ls
clera
clear
sudo pacman -S paru
sudo pacman -S yay
ls
clear
ls
cd ..
ls
mkdir tools
ls
cd tools/
ls
clear
ls
clear
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
git clone https://github.com/asdf-vm/asdf.git --branch v0.14.0
ls
clear
cd ..
ls
nvim $nu.config-path
ls
clear
ls
cd dotfiles/
ls
cd nushell/
ls
rm -rf proxy.nu
ls
vim config.nu
nvim env.nu
ls
clear
exit
z
ls
clear
$env | grep "http"
ls
clera
cclear
ls
clear
ls
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
ping www.google.com
clear
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
git config --global --unset http.proxy
git config --global --unset https.proxy
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
ls
clear
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
ls
clear
ls
nvim $nu.config-path
source ~/.config/nushell/asdf.nu
ls
asdf --version
$env | grep "asdf"
"\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\n source " + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path
$env | grep "asdf"
$env.ASDF_DIR = ($env.HOME | path join '.asdf')
source $env.HOME | path join '.asdf/asdf.nu'
ls
ls .asdf 
cd .asdf/
ls
nvim asdf.sh
ls
clear
ls
cd scripts/
ls
cd ..
ls
cd ..
ls
cd .asdf/
git status
ls
cd ..
ls
rm -rf .asdf/
ls
clear
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
rm -rf .asdf/
git clone https://github.com/asdf-vm/asdf.git ~/.asdf
ls
cd .asdf/
ls
clear
ls
cd ..
ls
rm -rf .asdf/
l;s
ls
clear
git clone https://github.com/asdf-vm/asdf ~/.asdf
ls
cd .asdf/
ls
git status
nvim asdf.nu
clear
ls
cd ..
ls
cd .config/nushell/
ls
rm -rf asdf.nu
nvim env.nu
source ~/.config/nushell/config.nu
asdf
asdf --version
ls
vim config.nu
"\n$env.ASDF_DIR = ($env.HOME | path join '.asdf')\n source " + ($env.HOME | path join '.asdf/asdf.nu') | save --append $nu.config-path
ls
nvim config.nu
source ~/.config/nushell/config.nu
asdf --version
asdf --help
asdf list go
asdf list all go
asdf list all golang
asdf install go
asdf install go 1.22.0
asdf install golang 1.22.0
asdf latest golang
asdf latest go
asdf latest erlang
asdf info
clear
asdf current
asdf plugin list
asdf plugin list -all
asdf plugin list --urls
clear
ls
z
ls
cd .asdf/
ls
clear
ls
nvim asdf.nu
asdf plugin list all
ls
asd --version
asdf --version
asdf list 
asdf list all
asdf list all golang
asdf list all go
asdf plugin list all
asdf plugin list all | go
asdf plugin list all | grep go
asdf plugin add golang
asdf list all go
asdf list all golang
asdf install golang 1.22.2
go --verson
z
ls
cd dotfiles/
ls
rm -rf nushell/
