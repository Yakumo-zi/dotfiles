use-grammars = { only = [ "rust", "c","cpp","bash","python","lua","javascript","typescript"] }


[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
auto-format = true
file-types=["rs"]
language-server = {command="rust-analyzer"}
indent = { tab-width = 4, unit = "    " }
comment-token = "//"

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c","h"] # TODO: ["h"]
roots = []
comment-token = "//"
language-server = {command= "clangd" }
indent = { tab-width = 2, unit = "  " }


[[language]]
name = "cpp"
scope = "source.cpp"
injection-regex = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "ino", "C", "H", "cu", "cuh", "cppm"]
roots = []
comment-token = "//"
language-server = {command= "clangd" }
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "javascript"
scope = "source.js"
injection-regex = "(js|javascript)"
file-types = ["js", "mjs", "cjs"]
shebangs = ["node"]
roots = []
comment-token = "//"
language-server = { command="typescript-language-server" ,args=["--stdio"]}
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "typescript"
scope = "source.ts"
injection-regex = "(ts|typescript)"
file-types = ["ts", "mts", "cts"]
shebangs = []
roots = []
language-server = { command="typescript-language-server" }
indent = { tab-width = 2, unit = "  " }

[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true
